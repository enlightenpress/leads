# Generated by Django 4.0.1 on 2022-01-11 14:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Centre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('SC', 'School'), ('CC', 'Childcare')], max_length=2)),
                ('website', models.CharField(max_length=200)),
                ('id_sheets', models.CharField(blank=True, max_length=14, null=True, unique=True, verbose_name='google sheets id')),
                ('google_place_id', models.CharField(max_length=30)),
                ('gov_id', models.CharField(max_length=20, verbose_name='governing body id')),
                ('age_range', models.CharField(max_length=20)),
                ('pupil_count', models.PositiveIntegerField(null=True, verbose_name='number of pupils')),
                ('active', models.BooleanField(default=True)),
                ('slug', models.SlugField(max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CentreType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtype', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactPersonPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_code', models.CharField(blank=True, max_length=4)),
                ('number', models.CharField(max_length=14)),
                ('type', models.CharField(choices=[('mob', 'Mobile'), ('lan', 'Landline'), ('dis', 'Disconnected'), ('ina', 'Inactive')], max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones', related_query_name='phone', to='leads.centre')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='leads.country')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phones', related_query_name='phone', to='leads.contactperson')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phones', related_query_name='phones', to='leads.datasource')),
            ],
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('days', models.PositiveIntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (4, 'Wednesday'), (8, 'Thursday'), (16, 'Friday'), (32, 'Saturday'), (64, 'Sunday')])),
                ('centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opening_hours', to='leads.centre')),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', related_query_name='email', to='leads.centre')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emails', related_query_name='email', to='leads.contactperson')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emails', related_query_name='email', to='leads.datasource')),
            ],
        ),
        migrations.AddField(
            model_name='contactperson',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_persons', related_query_name='contact_person', to='leads.datasource'),
        ),
        migrations.AddField(
            model_name='centre',
            name='subtype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centres', related_query_name='centre', to='leads.centretype'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=500, verbose_name='street address')),
                ('city', models.CharField(max_length=200, verbose_name='city/suburb/local area')),
                ('state', models.CharField(max_length=200, verbose_name='state/district/region')),
                ('postcode', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', related_query_name='address', to='leads.centre')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='leads.country')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addresses', related_query_name='address', to='leads.datasource')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='leads.addresstype')),
            ],
            options={
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='NoContact',
            fields=[
                ('from_date', models.DateField()),
                ('to_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(max_length=100)),
                ('centre', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='no_contact', serialize=False, to='leads.centre')),
                ('reason', models.TextField()),
                ('requsted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='leads.contactperson')),
            ],
        ),
        migrations.CreateModel(
            name='CentrePrimaryContact',
            fields=[
                ('centre', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='primary_contact', serialize=False, to='leads.centre')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='leads.address')),
                ('email', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='leads.email')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='leads.contactperson')),
                ('phone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='leads.address')),
            ],
        ),
        migrations.CreateModel(
            name='CentreContactPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.centre')),
                ('contact_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.contactperson')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leads.contactpersonposition')),
            ],
            options={
                'unique_together': {('centre', 'contact_person')},
            },
        ),
    ]
